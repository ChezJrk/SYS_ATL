
#pragma once
#ifndef TEST_CASE_H
#define TEST_CASE_H

#ifdef __cplusplus
extern "C" {
#endif


#include <stdint.h>
#include <stdbool.h>

// Compiler feature macros adapted from Hedley (public domain)
// https://github.com/nemequ/hedley

#if defined(__has_builtin)
#  define EXO_HAS_BUILTIN(builtin) __has_builtin(builtin)
#else
#  define EXO_HAS_BUILTIN(builtin) (0)
#endif

#if EXO_HAS_BUILTIN(__builtin_assume)
#  define EXO_ASSUME(expr) __builtin_assume(expr)
#elif EXO_HAS_BUILTIN(__builtin_unreachable)
#  define EXO_ASSUME(expr) \
      ((void)((expr) ? 1 : (__builtin_unreachable(), 1)))
#else
#  define EXO_ASSUME(expr) ((void)(expr))
#endif

typedef struct test_case_Context { 

    struct ConfigLoadAcc {
        bool stride_set;
    } ConfigLoadAcc;

    struct ConfigLoad_id1 {
        int_fast32_t src_stride;
    } ConfigLoad_id1;

    struct ConfigMatmul {
        bool done;
    } ConfigMatmul;

    struct ConfigStore {
        float scale;
        int_fast32_t dst_stride;
        bool act;
    } ConfigStore;

} test_case_Context;
struct exo_win_2i32{
    int32_t *data;
    int_fast32_t strides[2];
};
struct exo_win_2i8{
    int8_t *data;
    int_fast32_t strides[2];
};
struct exo_win_3i8{
    int8_t *data;
    int_fast32_t strides[3];
};
// conv_17(
//     output : i8[4,28,28,128]  @DRAM,
//     bias : i32[1,128]  @DRAM,
//     inp : i8[4,30,30,128]  @DRAM,
//     weights : i8[3,3,128,128]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_17( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );

// conv_17_cpu(
//     output : i8[4,28,28,128]  @DRAM,
//     bias : i32[1,128]  @DRAM,
//     inp : i8[4,30,30,128]  @DRAM,
//     weights : i8[3,3,128,128]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_17_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );

// conv_3(
//     output : i8[4,56,56,64]  @DRAM,
//     bias : i32[1,64]  @DRAM,
//     inp : i8[4,58,58,64]  @DRAM,
//     weights : i8[3,3,64,64]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_3( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );

// conv_30(
//     output : i8[4,14,14,256]  @DRAM,
//     bias : i32[1,256]  @DRAM,
//     inp : i8[4,16,16,256]  @DRAM,
//     weights : i8[3,3,256,256]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_30( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );

// conv_30_cpu(
//     output : i8[4,14,14,256]  @DRAM,
//     bias : i32[1,256]  @DRAM,
//     inp : i8[4,16,16,256]  @DRAM,
//     weights : i8[3,3,256,256]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_30_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );

// conv_3_cpu(
//     output : i8[4,56,56,64]  @DRAM,
//     bias : i32[1,64]  @DRAM,
//     inp : i8[4,58,58,64]  @DRAM,
//     weights : i8[3,3,64,64]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_3_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale );



#ifdef __cplusplus
}
#endif
#endif  // TEST_CASE_H

#include "test_case.h"


static int _floor_div(int num, int quot) {
  int off = (num>=0)? 0 : quot-1;
  return (num-off)/quot;
}

static int8_t _clamp_32to8(int32_t x) {
  return (x < -128)? -128 : ((x > 127)? 127 : x);
}

#include <stdio.h>
#include <stdlib.h>

#include <include/gemmini.h>
#include "gemm_acc_malloc.h"
#include <include/gemmini.h>
#include "gemm_malloc.h"
double _relu_(double x) {
    if (x > 0.0) return x;
    else return 0.0;
}

double _select_(double x, double v, double y, double z) {
    if (x < v) return y;
    else return z;
}

// clamp(
//     src : f32  @DRAM,
//     dst : i8  @DRAM
// )
static void clamp( test_case_Context *ctxt, float* src, int8_t* dst );


/* relying on the following instruction..."
acc_scale(src,dst,scale)
{dst}[0] = ACC_SCALE({src}[0], {scale}[0]);
*/
// clamp(
//     src : f32  @DRAM,
//     dst : i8  @DRAM
// )
static void clamp( test_case_Context *ctxt, float* src, int8_t* dst ) {
float l;
float h;
l = -128.0;
h = 127.0;
*dst = (int8_t)(_select_((double)*&h, (double)*src, (double)*&h, (double)*src));
*dst = _select_((double)*src, (double)*&l, (double)*&l, (double)*dst);
}


/* relying on the following instruction..."
config_ld_acc_i32_vector(stride_set)
gemmini_extended3_config_ld(0, 1.0f, 0, 0);

*/

/* relying on the following instruction..."
config_ld_i8_id1(src_stride)
gemmini_extended3_config_ld({src_stride}, 1.0f, 0, 1);

*/

/* relying on the following instruction..."
config_matmul()
gemmini_extended_config_ex(WS, 0, 0, 0, 1, 0, 0);

*/

/* relying on the following instruction..."
config_st_acc_i8(scale,dst_stride,act)
gemmini_extended_config_st({dst_stride}, {act}, {scale}[0]);

*/
// conv_17(
//     output : i8[4,28,28,128]  @DRAM,
//     bias : i32[1,128]  @DRAM,
//     inp : i8[4,30,30,128]  @DRAM,
//     weights : i8[3,3,128,128]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_17( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
gemmini_extended_config_st((128), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((128), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

for (int bo = 0; bo < 1; bo++) {
  int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 3 * 16 * sizeof(int8_t)));
  int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 8 * 3 * 3 * sizeof(int8_t)));
  int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 16 * 8 * sizeof(int32_t)));
  for (int bi = 0; bi < 4; bi++) {
    for (int orow_o = 0; orow_o < 2; orow_o++) {
      for (int orow_i = 0; orow_i < 14; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (0) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (16) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (32) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (48) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (64) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (80) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (96) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (112) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
        for (int krow = 0; krow < 3; krow++) {
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (0) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (0) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (0) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (0) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (1) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (1) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (1) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (1) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (2) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (2) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (2) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (2) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
        }
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (0) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (16) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (32) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (48) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (64) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (80) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (96) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (0) * (128) + (112) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
      }
    }
  }
  gemm_acc_free((uint32_t)(res));
  gemm_free((uint64_t)(w_s));
  gemm_free((uint64_t)(i_s));
}
for (int bo = 0; bo < 1; bo++) {
  int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 12 * 8 * 3 * 16 * sizeof(int8_t)));
  int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 8 * 8 * 3 * 3 * sizeof(int8_t)));
  int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 13 * 8 * sizeof(int32_t)));
  for (int bi = 0; bi < 4; bi++) {
    for (int orow_o = 0; orow_o < 2; orow_o++) {
      for (int orow_i = 0; orow_i < 14; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (0) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (16) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (32) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (48) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (64) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (80) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (96) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (128) + (112) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))), 16, (12) );
        for (int krow = 0; krow < 3; krow++) {
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (0) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (16) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (16) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (16) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (16) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (0) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (0) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (1) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (17) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (17) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (17) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (17) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (1) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (1) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          if (bi == 0) {
            if (orow_o == 0) {
              if (orow_i == 0) {
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (0) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (16) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (32) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (48) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (64) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (80) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (96) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
                for (int och_o_o = 0; och_o_o < 2; och_o_o++) {
                  gemmini_extended_mvin2( &weights[(krow) * (3 * 128 * 128) + (2) * (128 * 128) + (112) * (128) + (64 * och_o_o) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4 * och_o_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                }
              }
            }
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (18) * (128) + (0) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (18) * (128) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          if (orow_i == 0 || krow == 2) {
            gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (18) * (128) + (64) * (1)], { 128, 1 } }).strides[0]*1, 1.0f, 0, (12), 2);
gemmini_extended_mvin3( &inp[(bi + 4 * bo) * (30 * 30 * 128) + (krow + orow_i + 14 * orow_o) * (30 * 128) + (18) * (128) + (64) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (12) );
          }
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (0) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (0) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (1) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (1) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (2) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (2) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (3) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (3) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (4) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (4) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (5) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (5) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (6) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (6) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (4) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (5) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (6) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
          gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 8 * 8 * 16 * 16) + (2) * (8 * 8 * 16 * 16) + (7) * (8 * 16 * 16) + (7) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (12));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 8 * 12 * 16) + (2) * (8 * 12 * 16) + (7) * (12 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (12), 16, 16);
        }
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (0) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (16) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (32) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (48) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (64) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((4) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (80) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((5) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (96) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((6) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
        gemmini_extended_mvout( ((uint64_t) &output[(bi + 4 * bo) * (28 * 28 * 128) + (orow_i + 14 * orow_o) * (28 * 128) + (16) * (128) + (112) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((7) * (13 * 16) + (0) * (16) + (0) * (1))/16)), (16), (12) );
      }
    }
  }
  gemm_acc_free((uint32_t)(res));
  gemm_free((uint64_t)(w_s));
  gemm_free((uint64_t)(i_s));
}
}

// conv_17_cpu(
//     output : i8[4,28,28,128]  @DRAM,
//     bias : i32[1,128]  @DRAM,
//     inp : i8[4,30,30,128]  @DRAM,
//     weights : i8[3,3,128,128]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_17_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
EXO_ASSUME(28 == 30 - 3 + 1);
for (int b = 0; b < 4; b++) {
  for (int orow = 0; orow < 28; orow++) {
    for (int ocol = 0; ocol < 28; ocol++) {
      for (int och = 0; och < 128; och++) {
        int32_t res;
        res = bias[(0) * (128) + (och) * (1)];
        for (int krow = 0; krow < 3; krow++) {
          for (int kcol = 0; kcol < 3; kcol++) {
            for (int kch = 0; kch < 128; kch++) {
              int8_t w_s;
              w_s = weights[(krow) * (3 * 128 * 128) + (kcol) * (128 * 128) + (kch) * (128) + (och) * (1)];
              int8_t i_s;
              i_s = inp[(b) * (30 * 30 * 128) + (orow + krow) * (30 * 128) + (ocol + kcol) * (128) + (kch) * (1)];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_((double)*&tmp_res2);
        }
        output[(b) * (28 * 28 * 128) + (orow) * (28 * 128) + (ocol) * (128) + (och) * (1)] = tmp_res2;
      }
    }
  }
}
}

// conv_3(
//     output : i8[4,56,56,64]  @DRAM,
//     bias : i32[1,64]  @DRAM,
//     inp : i8[4,58,58,64]  @DRAM,
//     weights : i8[3,3,64,64]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_3( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
gemmini_extended_config_st((64), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((64), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 3 * 30 * sizeof(int8_t)));
int8_t *i_s_1 = (int8_t*) ((uint64_t)gemm_malloc (16 * 8 * 4 * 3 * 30 * sizeof(int8_t)));
int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 4 * 3 * 3 * sizeof(int8_t)));
int8_t *w_s_1 = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 4 * 3 * 3 * sizeof(int8_t)));
int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 16 * 4 * sizeof(int32_t)));
int32_t *res_1 = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 9 * 4 * sizeof(int32_t)));
for (int b = 0; b < 4; b++) {
  for (int ocol_o = 0; ocol_o < 3; ocol_o++) {
    for (int orow_o = 0; orow_o < 2; orow_o++) {
      for (int orow_io = 0; orow_io < 4; orow_io++) {
        for (int orow_ii = 0; orow_ii < 7; orow_ii++) {
          gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (0) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (16) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (32) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
          gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (48) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16, (16) );
          for (int krow = 0; krow < 3; krow++) {
            for (int kcol = 0; kcol < 3; kcol++) {
              if (ocol_o == 0) {
                if (b == 0) {
                  if (orow_o == 0) {
                    if (orow_ii + 7 * orow_io == 0) {
                      for (int kch_o = 0; kch_o < 4; kch_o++) {
                        gemmini_extended_mvin2( &weights[(krow) * (3 * 64 * 64) + (kcol) * (64 * 64) + (16 * kch_o) * (64) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                      }
                    }
                  }
                }
              }
              if (orow_ii + 7 * orow_io == 0 || krow == 2) {
                gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(b) * (58 * 58 * 64) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (58 * 64) + (kcol + 16 * ocol_o) * (64) + (0) * (1)], { 64, 1 } }).strides[0]*1, 1.0f, 0, (16), 2);
gemmini_extended_mvin3( &inp[(b) * (58 * 58 * 64) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (58 * 64) + (kcol + 16 * ocol_o) * (64) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 16 * 16) + (kcol) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
              }
              for (int kch_o = 0; kch_o < 4; kch_o++) {
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 16 * 16) + (kcol) * (4 * 16 * 16) + (kch_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 16 * 16) + (kcol) * (4 * 16 * 16) + (kch_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 16 * 16) + (kcol) * (4 * 16 * 16) + (kch_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
                gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (16));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 16 * 16) + (kcol) * (4 * 16 * 16) + (kch_o) * (16 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (16), 16, 16);
              }
            }
          }
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (16 * ocol_o) * (64) + (0) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((0) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (16 * ocol_o) * (64) + (16) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((1) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (16 * ocol_o) * (64) + (32) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((2) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
          gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (16 * ocol_o) * (64) + (48) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((3) * (16 * 16) + (0) * (16) + (0) * (1))/16)), (16), (16) );
        }
      }
    }
  }
  for (int orow_o = 0; orow_o < 2; orow_o++) {
    for (int orow_io = 0; orow_io < 4; orow_io++) {
      for (int orow_ii = 0; orow_ii < 7; orow_ii++) {
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (0) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((0) * (9 * 16) + (0) * (16) + (0) * (1))/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (16) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((1) * (9 * 16) + (0) * (16) + (0) * (1))/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (32) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (9 * 16) + (0) * (16) + (0) * (1))/16))), 16, (8) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (64) + (48) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (9 * 16) + (0) * (16) + (0) * (1))/16))), 16, (8) );
        for (int krow = 0; krow < 3; krow++) {
          for (int kcol = 0; kcol < 3; kcol++) {
            if (b == 0) {
              if (orow_o == 0) {
                if (orow_ii + 7 * orow_io == 0) {
                  for (int kch_o = 0; kch_o < 4; kch_o++) {
                    gemmini_extended_mvin2( &weights[(krow) * (3 * 64 * 64) + (kcol) * (64 * 64) + (16 * kch_o) * (64) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                  }
                }
              }
            }
            if (orow_ii + 7 * orow_io == 0 || krow == 2) {
              gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(b) * (58 * 58 * 64) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (58 * 64) + (48 + kcol) * (64) + (0) * (1)], { 64, 1 } }).strides[0]*1, 1.0f, 0, (8), 2);
gemmini_extended_mvin3( &inp[(b) * (58 * 58 * 64) + (krow + orow_ii + 7 * orow_io + 28 * orow_o) * (58 * 64) + (48 + kcol) * (64) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 8 * 16) + (kcol) * (4 * 8 * 16) + (0) * (8 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (8) );
            }
            for (int kch_o = 0; kch_o < 4; kch_o++) {
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((0) * (9 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 8 * 16) + (kcol) * (4 * 8 * 16) + (kch_o) * (8 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((1) * (9 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 8 * 16) + (kcol) * (4 * 8 * 16) + (kch_o) * (8 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (9 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 8 * 16) + (kcol) * (4 * 8 * 16) + (kch_o) * (8 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (8), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s_1)) + ((krow) * (3 * 4 * 4 * 16 * 16) + (kcol) * (4 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (9 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (8));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s_1)) + ((krow + orow_ii + 7 * orow_io) * (3 * 4 * 8 * 16) + (kcol) * (4 * 8 * 16) + (kch_o) * (8 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (8), 16, 16);
            }
          }
        }
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (48) * (64) + (0) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((0) * (9 * 16) + (0) * (16) + (0) * (1))/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (48) * (64) + (16) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((1) * (9 * 16) + (0) * (16) + (0) * (1))/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (48) * (64) + (32) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((2) * (9 * 16) + (0) * (16) + (0) * (1))/16)), (16), (8) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (56 * 56 * 64) + (orow_ii + 7 * orow_io + 28 * orow_o) * (56 * 64) + (48) * (64) + (48) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res_1)) + ((3) * (9 * 16) + (0) * (16) + (0) * (1))/16)), (16), (8) );
      }
    }
  }
}
gemm_acc_free((uint32_t)(res_1));
gemm_acc_free((uint32_t)(res));
gemm_free((uint64_t)(w_s_1));
gemm_free((uint64_t)(w_s));
gemm_free((uint64_t)(i_s_1));
gemm_free((uint64_t)(i_s));
}

// conv_30(
//     output : i8[4,14,14,256]  @DRAM,
//     bias : i32[1,256]  @DRAM,
//     inp : i8[4,16,16,256]  @DRAM,
//     weights : i8[3,3,256,256]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_30( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
gemmini_extended_config_st((256), (act), (scale)[0]);

gemmini_extended_config_ex(WS, 0, 0, 0, 1, 0, 0);

gemmini_extended3_config_ld((256), 1.0f, 0, 1);

gemmini_extended3_config_ld(0, 1.0f, 0, 0);

int8_t *i_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 14 * 16 * 3 * 9 * sizeof(int8_t)));
int8_t *w_s = (int8_t*) ((uint64_t)gemm_malloc (16 * 16 * 4 * 16 * 3 * 3 * sizeof(int8_t)));
int32_t *res = (int32_t*) ((uint32_t)gemm_acc_malloc (16 * 15 * 4 * 7 * sizeof(int32_t)));
for (int och_out = 0; och_out < 4; och_out++) {
  for (int b = 0; b < 4; b++) {
    for (int orow_o = 0; orow_o < 2; orow_o++) {
      for (int orow_i = 0; orow_i < 7; orow_i++) {
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (256) + (64 * och_out) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (0) * (15 * 16) + (0) * (16) + (0) * (1))/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (256) + (16 + 64 * och_out) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (1) * (15 * 16) + (0) * (16) + (0) * (1))/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (256) + (32 + 64 * och_out) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (2) * (15 * 16) + (0) * (16) + (0) * (1))/16))), 16, (14) );
        gemmini_extended_mvin( ((uint64_t) &bias[(0) * (256) + (48 + 64 * och_out) * (1)]), ((uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (3) * (15 * 16) + (0) * (16) + (0) * (1))/16))), 16, (14) );
        for (int krow = 0; krow < 3; krow++) {
          for (int kcol = 0; kcol < 3; kcol++) {
            if (b == 0) {
              if (orow_o == 0) {
                if (orow_i == 0) {
                  for (int kch_o = 0; kch_o < 16; kch_o++) {
                    gemmini_extended_mvin2( &weights[(krow) * (3 * 256 * 256) + (kcol) * (256 * 256) + (16 * kch_o) * (256) + (64 * och_out) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 16 * 4 * 16 * 16) + (kcol) * (16 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), 16*(4), (16) );
                  }
                }
              }
            }
            if (orow_i == 0 || krow == 2) {
              gemmini_extended4_config_ld(((struct exo_win_2i8){ (int8_t*)&inp[(b) * (16 * 16 * 256) + (krow + orow_i + 7 * orow_o) * (16 * 256) + (kcol) * (256) + (0) * (1)], { 256, 1 } }).strides[0]*1, 1.0f, 0, (14), 2);
gemmini_extended_mvin3( &inp[(b) * (16 * 16 * 256) + (krow + orow_i + 7 * orow_o) * (16 * 256) + (kcol) * (256) + (0) * (1)], ((uint64_t) &*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 16 * 14 * 16) + (kcol) * (16 * 14 * 16) + (0) * (14 * 16) + (0) * (16) + (0) * (1))/16))), 16*(16), (14) );
            }
            for (int kch_o = 0; kch_o < 16; kch_o++) {
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 16 * 4 * 16 * 16) + (kcol) * (16 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (0) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (0) * (15 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 16 * 14 * 16) + (kcol) * (16 * 14 * 16) + (kch_o) * (14 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 16 * 4 * 16 * 16) + (kcol) * (16 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (1) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (1) * (15 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 16 * 14 * 16) + (kcol) * (16 * 14 * 16) + (kch_o) * (14 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 16 * 4 * 16 * 16) + (kcol) * (16 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (2) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (2) * (15 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 16 * 14 * 16) + (kcol) * (16 * 14 * 16) + (kch_o) * (14 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (14), 16, 16);
              gemmini_extended_preload((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)w_s)) + ((krow) * (3 * 16 * 4 * 16 * 16) + (kcol) * (16 * 4 * 16 * 16) + (kch_o) * (4 * 16 * 16) + (3) * (16 * 16) + (0) * (16) + (0) * (1))/16))), (uint32_t)(&*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (3) * (15 * 16) + (0) * (16) + (0) * (1))/16))) | 0x40000000, (16), (16), (16), (14));
gemmini_extended_compute_preloaded((uint32_t)(&*(int8_t*)((uint64_t)( ((uint32_t)((uint64_t)i_s)) + ((krow + orow_i) * (3 * 16 * 14 * 16) + (kcol) * (16 * 14 * 16) + (kch_o) * (14 * 16) + (0) * (16) + (0) * (1))/16))), ~((uint32_t)0), (16), (14), 16, 16);
            }
          }
        }
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (14 * 14 * 256) + (orow_i + 7 * orow_o) * (14 * 256) + (0) * (256) + (64 * och_out) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (0) * (15 * 16) + (0) * (16) + (0) * (1))/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (14 * 14 * 256) + (orow_i + 7 * orow_o) * (14 * 256) + (0) * (256) + (16 + 64 * och_out) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (1) * (15 * 16) + (0) * (16) + (0) * (1))/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (14 * 14 * 256) + (orow_i + 7 * orow_o) * (14 * 256) + (0) * (256) + (32 + 64 * och_out) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (2) * (15 * 16) + (0) * (16) + (0) * (1))/16)), (16), (14) );
        gemmini_extended_mvout( ((uint64_t) &output[(b) * (14 * 14 * 256) + (orow_i + 7 * orow_o) * (14 * 256) + (0) * (256) + (48 + 64 * och_out) * (1)]), (uint32_t) &*(int32_t*)((uint64_t)( ((uint32_t)((uint64_t)res)) + ((orow_i) * (4 * 15 * 16) + (3) * (15 * 16) + (0) * (16) + (0) * (1))/16)), (16), (14) );
      }
    }
  }
}
gemm_acc_free((uint32_t)(res));
gemm_free((uint64_t)(w_s));
gemm_free((uint64_t)(i_s));
}

// conv_30_cpu(
//     output : i8[4,14,14,256]  @DRAM,
//     bias : i32[1,256]  @DRAM,
//     inp : i8[4,16,16,256]  @DRAM,
//     weights : i8[3,3,256,256]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_30_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
EXO_ASSUME(14 == 16 - 3 + 1);
for (int b = 0; b < 4; b++) {
  for (int orow = 0; orow < 14; orow++) {
    for (int ocol = 0; ocol < 14; ocol++) {
      for (int och = 0; och < 256; och++) {
        int32_t res;
        res = bias[(0) * (256) + (och) * (1)];
        for (int krow = 0; krow < 3; krow++) {
          for (int kcol = 0; kcol < 3; kcol++) {
            for (int kch = 0; kch < 256; kch++) {
              int8_t w_s;
              w_s = weights[(krow) * (3 * 256 * 256) + (kcol) * (256 * 256) + (kch) * (256) + (och) * (1)];
              int8_t i_s;
              i_s = inp[(b) * (16 * 16 * 256) + (orow + krow) * (16 * 256) + (ocol + kcol) * (256) + (kch) * (1)];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_((double)*&tmp_res2);
        }
        output[(b) * (14 * 14 * 256) + (orow) * (14 * 256) + (ocol) * (256) + (och) * (1)] = tmp_res2;
      }
    }
  }
}
}

// conv_3_cpu(
//     output : i8[4,56,56,64]  @DRAM,
//     bias : i32[1,64]  @DRAM,
//     inp : i8[4,58,58,64]  @DRAM,
//     weights : i8[3,3,64,64]  @DRAM,
//     act : bool,
//     scale : f32  @DRAM
// )
void conv_3_cpu( test_case_Context *ctxt, int8_t* output, int32_t* bias, int8_t* inp, int8_t* weights, bool act, float* scale ) {
EXO_ASSUME(56 == 58 - 3 + 1);
for (int b = 0; b < 4; b++) {
  for (int orow = 0; orow < 56; orow++) {
    for (int ocol = 0; ocol < 56; ocol++) {
      for (int och = 0; och < 64; och++) {
        int32_t res;
        res = bias[(0) * (64) + (och) * (1)];
        for (int krow = 0; krow < 3; krow++) {
          for (int kcol = 0; kcol < 3; kcol++) {
            for (int kch = 0; kch < 64; kch++) {
              int8_t w_s;
              w_s = weights[(krow) * (3 * 64 * 64) + (kcol) * (64 * 64) + (kch) * (64) + (och) * (1)];
              int8_t i_s;
              i_s = inp[(b) * (58 * 58 * 64) + (orow + krow) * (58 * 64) + (ocol + kcol) * (64) + (kch) * (1)];
              int32_t a2;
              int32_t b2;
              a2 = (int32_t)(i_s);
              b2 = (int32_t)(w_s);
              res += a2 * b2;
            }
          }
        }
        int32_t src_tmp;
        src_tmp = res;
        float tmp_res1;
        (&tmp_res1)[0] = ACC_SCALE((&src_tmp)[0], (scale)[0]);
        int8_t tmp_res2;
        clamp(ctxt,&tmp_res1,&tmp_res2);
        if (act == true) {
          tmp_res2 = _relu_((double)*&tmp_res2);
        }
        output[(b) * (56 * 56 * 64) + (orow) * (56 * 64) + (ocol) * (64) + (och) * (1)] = tmp_res2;
      }
    }
  }
}
}


/* relying on the following instruction..."
do_ld_acc_i32_vector(n,src,dst)
gemmini_extended_mvin( ((uint64_t) &{src_data}), ((uint32_t) &{dst_data}), 16, {n} );
*/

/* relying on the following instruction..."
do_ld_i8_block_id1(n,m,src,dst)
gemmini_extended_mvin2( &{src_data}, ((uint64_t) &{dst_data}), 16*{m}, {n} );
*/

/* relying on the following instruction..."
do_matmul_acc_i8(N,M,K,A,B,C)
gemmini_extended_preload((uint32_t)(&{B_data}), (uint32_t)(&{C_data}) | 0x40000000, {M}, {K}, {M}, {N});
gemmini_extended_compute_preloaded((uint32_t)(&{A_data}), ~((uint32_t)0), {K}, {N}, 16, 16);
*/

/* relying on the following instruction..."
do_st_acc_i8(n,m,src,dst)
gemmini_extended_mvout( ((uint64_t) &{dst_data}), (uint32_t) &{src_data}, {m}, {n} );
*/

/* relying on the following instruction..."
ld_i8_block_id2(n,m,src,dst)
gemmini_extended4_config_ld({src}.strides[0]*1, 1.0f, 0, {n}, 2);
gemmini_extended_mvin3( &{src_data}, ((uint64_t) &{dst_data}), 16*{m}, {n} );
*/
